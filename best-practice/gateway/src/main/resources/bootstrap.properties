spring.application.name=gateway
# 配置管理中心和服务发现注册中心
spring.cloud.nacos.config.server-addr=127.0.0.1:8848
spring.cloud.nacos.config.file-extension=yaml
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
# 使用 Sentinel 作为熔断器
spring.cloud.sentinel.transport.port=8721
spring.cloud.sentinel.transport.dashboard=localhost:8080
# 路由网关配置
# 设置与服务注册发现组件结合，这样可以采用服务名的路由策略
#spring.cloud.gateway.discovery.locator.enabled=true
# 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）
#spring.cloud.gateway.routes[0].id=NACOS-CONSUMER
#spring.cloud.gateway.routes[0].uri=lb://nacos-consumer
#spring.cloud.gateway.routes[0].predicates=Method
# 方法谓词，这里是匹配 GET 和 POST 请求 - Method=GET,POST
#spring.cloud.gateway.routes[1].id=NACOS-CONSUMER-FEIGN
#spring.cloud.gateway.routes[1].uri=lb://nacos-consumer-feign
#spring.cloud.gateway.routes[1].predicates[0]=Method=GET,POST
#spring.cloud.gateway.routes[2].id=admin
#spring.cloud.gateway.routes[2].uri=lb://admin
#spring.cloud.gateway.routes[2].predicates[0]=Path=/**
server.port=9000
#server.ssl.enabled=true
# 配置日志级别，方别调试
logging.level.org.springframework.cloud.gateway=debug


# spring:
#   cloud:
#     gateway:
#       routes:
#         - id: admin
#           uri: http://localhost:8001
#           predicates:
#             - Path=/admin/**
#         - id: test
#           uri: http://localhost:8080
#           predicates:
#             - Path=/test/**
#           filters:
#             - RewritePath=/test/(?<segment>.*), /user/$\{segment}